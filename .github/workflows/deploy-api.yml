name: Build and deploy API to Azure
on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - name: Checkout repository
        id: github
        uses: actions/checkout@v3
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'
          
      - name: Configure Azure ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ vars.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: SHA of the commit
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "::set-output name=short_sha::$calculatedSha"
          
      - name: Build and push Docker image to ACR
        env:
          ACR_REGISTRY: ${{ vars.ACR_SERVER }}
          IMAGE_TAG: ${{ steps.vars.outputs.short_sha }}
        run: |
          docker build -f src/CommandAPI/Dockerfile -t $ACR_REGISTRY/cmdapp:$IMAGE_TAG -t $ACR_REGISTRY/cmdapp:latest .
          docker push $ACR_REGISTRY/cmdapp --all-tags
  
  deploy-container-to-ACS:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: build and deploy to ACR
        uses: azure/container-apps-deploy-action@v1
        env:
          IMAGE_TAG: ${{ needs.build-and-deploy.outputs.short_sha }}
          ACR_SERVER: ${{ vars.ACR_SERVER }}
        with:
          registryUrl: ${{ vars.ACR_SERVER }}
          imageToDeploy: $ACR_SERVER/cmdapp:$IMAGE_TAG
          targetPort: 8080
          ingress: external
          containerAppName: cmd-api-dev
          containerAppEnvironment: cmd-api-dev
          resourceGroup: cmd-rg
          environmentVariables: 
            ASPNETCORE_ENVIRONMENT=Development ASPNETCORE_URLS=http://+:8080